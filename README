Гайд (роадмап) по изучению Java - https://eightm.github.io/JavaBackendStartGuide/java-core/
еще одна роадмапа - https://roadmap.sh/java
Официальные гайды по Spring - https://spring.io/guides
Статьи по Java, Spring и не только - Статьи по Java, Spring и не только 
https://roadmap.sh/java
https://github.com/s4kibs4mi/java-developer-roadmap

Книги - Философия Java, ДЖОШУА БЛОХ, «JAVA. ЭФФЕКТИВНОЕ ПРОГРАММИРОВАНИЕ» , РОБЕРТ ЛАФОРЕ. «СТРУКТУРЫ ДАННЫХ И АЛГОРИТМЫ JAVA»


---

#### **1. Основы Программирования и ООП**

- **Основы Программирования**
  - Понимание алгоритмов и структур данных
  - Основные концепции программирования

- **Основы ООП**
  - **Инкапсуляция**: Сокрытие внутренней реализации класса и предоставление публичного интерфейса.
  - **Наследование**: Позволяет создавать новые классы на основе существующих.
  - **Полиморфизм**: Возможность обработки объектов разных типов единообразно.

---

#### **2. Основы Java**

- **Синтаксис и Структура Программы**
  - Основные конструкции языка
  - Пакеты и импорт классов

- **Типы Данных и Переменные**
  - Примитивные типы данных
  - Ссылочные типы данных

- **Управляющие Конструкции**
  - Условные операторы (`if`, `switch`)
  - Циклы (`for`, `while`, `do-while`)

- **Классы и Объекты**
  - Создание и использование классов и объектов
  - **Конструкторы**: Создание и использование конструкторов
  - **Методы**: Создание и вызов методов
  - **Статические члены**: Использование `static` для переменных и методов

---

#### **3. Массивы и Коллекции**

- **Массивы**
  - Одномерные массивы: создание, инициализация, операции
  - Многомерные массивы: работа с таблицами данных

- **Коллекции**
  - Основные интерфейсы и реализации: `List` (ArrayList, LinkedList), `Set` (HashSet), `Map` (HashMap)
  - **Итераторы**: Использование циклов и итераторов для перебора коллекций

---
P.S java collections framework - Изучить вдоль и горизонтально. Очень важно!

#### **4. Обработка Исключений**

- **Основы Обработки Исключений**
  - Виды исключений: проверяемые (checked) и непроверяемые (unchecked)
  - Блоки обработки: `try`, `catch`, `finally`
  - Создание собственных исключений

---


